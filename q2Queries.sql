SELECT c.CourseName, cr.grade FROM Courses C, CourseOffers CO, StudentRegistrationsToDegrees STD, NewCR CR WHERE CR.StudentId=%1% AND STD.DegreeId=%2% AND CR.studentregistrationId = STD.studentregistrationId AND C.courseid = CR.courseid AND CR.grade >= 5.0 AND Cr.grade IS NOT NULL ORDER BY CO.year, CO.quartile, CO.courseofferid;
SELECT 0;
SELECT 0;
SELECT 0;
SELECT 0;
SELECT 0;
With WeightCourse(StudentId, DegreeId, CourseOfferId, Grade, Weight) as (SELECT E.StudentId, E.DegreeId, CR.CourseOfferId, Cr.Grade, C.ECTS/E.sumECTS FROM ECTS E, Degrees D, StudentRegistrationsToDegrees SD, Courses C, CourseRegistration CR, CourseOffers CO WHERE SD.StudentRegistrationId = CR.StudentRegistrationId AND E.DegreeId=D.DegreeId AND E.sumECTS<D.TotalECTS AND CO.CourseOfferId = CR.CourseOfferId AND CR.Grade >= 5.0 AND CO.CourseId = C.CourseId), GPA(StudentId, DegreeId, GPA) as (SELECT StudentId, DegreeId, SUM(grade*weight) FROM weightCourse GROUP BY StudentId, DegreeId) SELECT G.DegreeID, S.Birthyearstudent, S.Gender, G.GPA FROM GPA G, Students S WHERE S.StudentId = G.StudentId GROUP BY CUBE(G.DegreeId, S.Birthyearstudent, S.Gender, G.GPA) ORDER BY G.DegreeID desc, S.Birthyearstudent desc, S.Gender asc;
WITH RequiredSA(CourseOfferId, numberSAS) AS (SELECT CourseOfferId, COUNT(StudentRegistrationId)/50 FROM CourseRegistrations GROUP BY CourseOfferId ), ActualSA(CourseOfferId, realSAS) AS (SELECT CourseOfferId, COUNT(StudentRegistrationId) FROM StudentAssistants GROUP BY CourseOfferId ) SELECT C.CourseName, CO.year, CO.quartile FROM CourseOffers CO,  Courses C WHERE CO.CourseId = C.CourseId GROUP BY C.CourseName, CO.year, CO.quartile ORDER BY CO.CourseOfferId EXCEPT SELECT C.CourseName, CO.year, CO.quartile FROM CourseOffers Co, Courses C, RequiredSA R, ActualSA A WHERE CO.Courseid = C.Courseid AND Co.courseofferid = r.courseofferid and co.courseofferid = a.courseofferid and A.realsas >= r.numbersas GROUP BY C.CourseName, CO.year, Co.quartile;
